<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.PostMapper">

	<!-- 게시글 등록 -->
	<insert id="insertPost" parameterType="com.project.dto.Post">
		INSERT INTO post(
	        post_idx
            , userinfo_id 
            , post_loc
            , post_address
            , post_daytype
            , post_title
            , post_content
            , post_regdate
            , post_tag
            , post_viewcnt
            , post_likes
            , post_comment
            , post_status
	        )
	    VALUES(
	        #{postIdx} 
	        , #{userinfoId}
	        , #{postLoc}
	        , #{postAddress}
	        , #{postDayType}
	        , #{postTitle}
	        , #{postContent}
	        , NOW()
	        , #{postTag}
	        , 0
	        , 0
	        , 0
	        , 1
	        )
	</insert>
	
	<!-- 게시글 수정 -->
	<update id="updatePost" parameterType="com.project.dto.Post">
		UPDATE post SET
			post_title=#{postTitle} 
            , post_content=#{postContent}
            , post_loc=#{postLoc}
            , post_address=#{postAddress}
            , post_tag=#{postTag}
            , post_daytype=#{postDayType}
        WHERE post_idx=#{postIdx}
	</update>
	
	<!-- 게시글 삭제 -->
	<update id="deletePost" parameterType="com.project.dto.Post">
		UPDATE post SET
			post_status=0
		WHERE post_idx=#{postIdx}
	</update>
	
	<!-- 게시글 개수 -->
	<select id="selectPostCount" resultType="int">
		SELECT COUNT(*) 
		FROM post
        <!-- 검색어 조건 처리 -->
        <choose>
            <when test="selectKeyword != null and selectKeyword != ''">
                 WHERE post_status=1 and post_title LIKE CONCAT('%', #{selectKeyword}, '%') 
                 OR post_status=1 and post_content LIKE CONCAT('%', #{selectKeyword}, '%')
            </when>
            <otherwise>
                WHERE post_status=1 <!-- 검색어가 없는 경우 status=1 데이터 검색 -->
            </otherwise>
        </choose>
	</select>
	
	<!-- 게시글 조회수 업데이트 -->
	<update id="postViewCount" parameterType="com.project.dto.Post">
		UPDATE post SET
        	post_viewcnt = post_viewcnt + 1
        WHERE post_idx=#{postIdx}
	</update>
	
	<!-- 추천 체크 -->
	<update id="postLikesCheck" parameterType="com.project.dto.Post">
		UPDATE post SET
        	post_likes = post_likes + 1
        WHERE post_idx=#{postIdx}
	</update>
	
	<!-- 추천 취소 -->
	<update id="postLikesCancel" parameterType="com.project.dto.Post">
		UPDATE post SET
        	post_likes = post_likes - 1
        WHERE post_idx=#{postIdx}
	</update>
	
	<select id="selectResentlyPostList" resultType="com.project.dto.Post">
		SELECT 
			p.post_idx
			, p.userinfo_id
			, u.nickname
			, p.post_title
			, p.post_loc
			, p.post_daytype
			, CASE
				WHEN TIMESTAMPDIFF(SECOND, p.post_regdate, NOW()) <![CDATA[<]]> 60 THEN CONCAT(TIMESTAMPDIFF(SECOND, p.post_regdate, NOW()), '초 전')
       	        WHEN TIMESTAMPDIFF(MINUTE, p.post_regdate, NOW()) <![CDATA[<]]> 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, p.post_regdate, NOW()), '분 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[=]]> 0 THEN CONCAT(TIMESTAMPDIFF(HOUR, p.post_regdate, NOW()), '시간 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[=]]> 1 THEN '어제'
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 7 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate), '일 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 30 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate) DIV 7, '주 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 365 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate) DIV 30, '개월 전')
				ELSE CONCAT(DATEDIFF(NOW(), post_regdate) DIV 365, '년 전')
			END as post_regdate
			, p.post_tag
			, p.post_viewcnt
			, p.post_likes
			, p.post_status
			, p.post_comment
		FROM post p
		LEFT JOIN userinfo u 
			ON p.userinfo_id = u.id
		  <choose>
	           <when test="selectKeyword != null and selectKeyword != ''">
	                WHERE (post_title LIKE CONCAT('%', #{selectKeyword}, '%') 
	                OR post_content LIKE CONCAT('%', #{selectKeyword}, '%'))
	                AND post_status = 1
	           </when>
	           <otherwise>
	               WHERE post_status=1 
	           </otherwise>
	      </choose>
	    ORDER BY p.post_regdate DESC
	    LIMIT #{offset}, #{limit}
	</select>
	
	<select id="selectViewPostList" resultType="com.project.dto.Post">
		SELECT 
			p.post_idx
			, p.userinfo_id
			, u.nickname
			, p.post_title
			, p.post_loc
			, p.post_daytype
			, CASE
				WHEN TIMESTAMPDIFF(SECOND, p.post_regdate, NOW()) <![CDATA[<]]> 60 THEN CONCAT(TIMESTAMPDIFF(SECOND, p.post_regdate, NOW()), '초 전')
       	        WHEN TIMESTAMPDIFF(MINUTE, p.post_regdate, NOW()) <![CDATA[<]]> 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, p.post_regdate, NOW()), '분 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[=]]> 0 THEN CONCAT(TIMESTAMPDIFF(HOUR, p.post_regdate, NOW()), '시간 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[=]]> 1 THEN '어제'
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 7 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate), '일 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 30 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate) DIV 7, '주 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 365 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate) DIV 30, '개월 전')
				ELSE CONCAT(DATEDIFF(NOW(), post_regdate) DIV 365, '년 전')
			END as post_regdate
			, p.post_tag
			, p.post_viewcnt
			, p.post_likes
			, p.post_status
			, p.post_comment
		FROM post p
		LEFT JOIN userinfo u 
			ON p.userinfo_id = u.id
		  <choose>
	           <when test="selectKeyword != null and selectKeyword != ''">
	                WHERE (post_title LIKE CONCAT('%', #{selectKeyword}, '%') 
	                OR post_content LIKE CONCAT('%', #{selectKeyword}, '%'))
	                AND post_status = 1
	           </when>
	           <otherwise>
	               WHERE post_status=1 
	           </otherwise>
	      </choose>
	    ORDER BY p.post_viewcnt DESC
	    LIMIT #{offset}, #{limit}
	</select>
	
	<select id="selectLikesPostList" resultType="com.project.dto.Post">
		SELECT 
			p.post_idx
			, p.userinfo_id
			, u.nickname
			, p.post_title
			, p.post_loc
			, p.post_daytype
			, CASE
				WHEN TIMESTAMPDIFF(SECOND, p.post_regdate, NOW()) <![CDATA[<]]> 60 THEN CONCAT(TIMESTAMPDIFF(SECOND, p.post_regdate, NOW()), '초 전')
       	        WHEN TIMESTAMPDIFF(MINUTE, p.post_regdate, NOW()) <![CDATA[<]]> 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, p.post_regdate, NOW()), '분 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[=]]> 0 THEN CONCAT(TIMESTAMPDIFF(HOUR, p.post_regdate, NOW()), '시간 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[=]]> 1 THEN '어제'
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 7 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate), '일 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 30 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate) DIV 7, '주 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 365 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate) DIV 30, '개월 전')
				ELSE CONCAT(DATEDIFF(NOW(), post_regdate) DIV 365, '년 전')
			END as post_regdate
			, p.post_tag
			, p.post_viewcnt
			, p.post_likes
			, p.post_status
			, p.post_comment
		FROM post p
		LEFT JOIN userinfo u 
			ON p.userinfo_id = u.id
		  <choose>
	           <when test="selectKeyword != null and selectKeyword != ''">
	                WHERE (post_title LIKE CONCAT('%', #{selectKeyword}, '%') 
	                OR post_content LIKE CONCAT('%', #{selectKeyword}, '%'))
	                AND post_status = 1
	           </when>
	           <otherwise>
	               WHERE post_status=1 
	           </otherwise>
	      </choose>
	    ORDER BY p.post_likes DESC
	    LIMIT #{offset}, #{limit}
	</select>
	
	<!-- 댓글 많은 순으로 정렬 -->
	<select id="selectCommentPostList" resultType="com.project.dto.Post">
		SELECT 
			p.post_idx
			, p.userinfo_id
			, u.nickname
			, p.post_title
			, p.post_loc
			, p.post_daytype
			, CASE
				WHEN TIMESTAMPDIFF(SECOND, p.post_regdate, NOW()) <![CDATA[<]]> 60 THEN CONCAT(TIMESTAMPDIFF(SECOND, p.post_regdate, NOW()), '초 전')
       	        WHEN TIMESTAMPDIFF(MINUTE, p.post_regdate, NOW()) <![CDATA[<]]> 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, p.post_regdate, NOW()), '분 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[=]]> 0 THEN CONCAT(TIMESTAMPDIFF(HOUR, p.post_regdate, NOW()), '시간 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[=]]> 1 THEN '어제'
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 7 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate), '일 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 30 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate) DIV 7, '주 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 365 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate) DIV 30, '개월 전')
				ELSE CONCAT(DATEDIFF(NOW(), post_regdate) DIV 365, '년 전')
			END as post_regdate
			, p.post_tag
			, p.post_viewcnt
			, p.post_likes
			, p.post_status
			, p.post_comment
		FROM post p
		LEFT JOIN userinfo u 
			ON p.userinfo_id = u.id
		  <choose>
	           <when test="selectKeyword != null and selectKeyword != ''">
	                WHERE (post_title LIKE CONCAT('%', #{selectKeyword}, '%') 
	                OR post_content LIKE CONCAT('%', #{selectKeyword}, '%'))
	                AND post_status = 1
	           </when>
	           <otherwise>
	               WHERE post_status=1 
	           </otherwise>
	      </choose>
	    ORDER BY p.post_comment DESC
	    LIMIT #{offset}, #{limit}
	</select>
	
	<!-- 게시글 상세보기 -->
	<select id="selectPost" resultType="com.project.dto.Post">
		SELECT
         	p.post_idx
			, p.userinfo_id
			, u.nickname
			, p.post_title
			, p.post_loc
			, p.post_address
			, p.post_daytype
			, p.post_content
			, date_format(p.post_regdate, '%y-%m-%d') as post_regdate 
			, CASE
				WHEN TIMESTAMPDIFF(SECOND, p.post_regdate, NOW()) <![CDATA[<]]> 60 THEN CONCAT(TIMESTAMPDIFF(SECOND, p.post_regdate, NOW()), '초 전')
       	        WHEN TIMESTAMPDIFF(MINUTE, p.post_regdate, NOW()) <![CDATA[<]]> 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, p.post_regdate, NOW()), '분 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[=]]> 0 THEN CONCAT(TIMESTAMPDIFF(HOUR, p.post_regdate, NOW()), '시간 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[=]]> 1 THEN '어제'
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 7 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate), '일 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 30 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate) DIV 7, '주 전')
				WHEN DATEDIFF(NOW(), p.post_regdate) <![CDATA[<]]> 365 THEN CONCAT(DATEDIFF(NOW(), p.post_regdate) DIV 30, '개월 전')
				ELSE CONCAT(DATEDIFF(NOW(), post_regdate) DIV 365, '년 전')
			END as day
			, p.post_tag
			, p.post_viewcnt
			, p.post_likes
			, p.post_status
			, p.post_comment
		FROM post p
		LEFT JOIN userinfo u 
			ON p.userinfo_id = u.id
        WHERE post_idx=#{postIdx}
	</select>
	
	<select id="selectPreNumNextNum" resultType="com.project.dto.Post">
		SELECT
			(SELECT post_idx 
		  		FROM post 
		  		WHERE post_status = 1 AND post_idx <![CDATA[<]]> #{postIdx} 
			  	ORDER BY post_regdate DESC LIMIT 1) AS prevnum
			  	
			  	, (SELECT post_idx 
			  	   FROM post 
			       WHERE post_status = 1 AND post_idx <![CDATA[>]]> #{postIdx} 
			       ORDER BY post_regdate ASC LIMIT 1) AS nextnum
		  
		FROM post
		WHERE post_status = 1 AND post_idx = #{postIdx} 
		ORDER BY post_regdate DESC
	</select>
	
	<select id="selectLikesPost" resultType="com.project.dto.Post">
		SELECT 
			p.post_idx
			, l.userinfo_id
			, u.nickname
			, p.post_title
			, p.post_loc
			, p.post_daytype
			, date_format(p.post_regdate, '%y-%m-%d') as post_regdate
			, p.post_tag
			, p.post_status
		FROM post p
		LEFT JOIN likes l 
			ON p.post_idx = l.post_idx
		LEFT JOIN userinfo u 
			ON p.userinfo_id = u.id
		
		WHERE l.userinfo_id = #{userinfoId} 
			AND p.post_status = 1
	    ORDER BY p.post_regdate DESC
	</select>
	
	<select id="selectWritePost" resultType="com.project.dto.Post">
		SELECT 
			post_idx
			, post_title
			, post_loc
			, date_format(post_regdate, '%y-%m-%d') as post_regdate
			, post_status
		FROM post
		WHERE userinfo_id = #{userinfoId} 
			AND post_status = 1
	    ORDER BY post_regdate DESC
	</select>
</mapper>