<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.UserinfoMapper">

	<!--회원가입 -->
	<insert id="insertUserinfo" parameterType="com.project.dto.Userinfo">
		INSERT IGNORE INTO userinfo (
			id
			, pw
			, name
			, nickname
			, address
			, email
			, birth
			, regdate
			, status  
			, enabled
		)
		VALUES (
			#{id}
			, #{pw}
			, #{name}
			, #{nickname}
			, #{address}
			, #{email}
			, #{birth}
			, Now()
			, 1
			, 0
		)
	</insert>
   
	<insert id="insertSecurityAuth" parameterType="com.project.dto.UserinfoAuth">
		INSERT IGNORE INTO userinfo_auth (
			id,
	        auth
		)
	    VALUES (
	        #{id},
	        #{auth}
	    )
	</insert>
   
   
	<resultMap type="Userinfo" id="securityUserinfoResultMap">
		<id column="id" property="id"/>
		<result column="pw" property="pw"/>
		<result column="name" property="name"/>
		<result column="nickname" property="nickname"/>
		<result column="address" property="address"/>
		<result column="regdate" property="regdate"/>
		<result column="status" property="status"/>
		<result column="enabled" property="enabled"/>
		<collection property="securityAuthList" select="selectUserinfoAuthById" column="id"/>
	</resultMap> 
   
	<select id="selectUserinfoAuthById" resultType="com.project.dto.UserinfoAuth">
		SELECT 
			id
			, auth 
		FROM userinfo_auth 
		WHERE id=#{id}
	</select>
  
	<select id="selectUserinfoLogin" resultMap="securityUserinfoResultMap">
		SELECT 
			user.id
			, user.pw
			, user.name
			, user.nickname
			, user.address
			, user.email
			, user.regdate
			, user.status  
			, user.enabled
			, auth.auth
		FROM userinfo user
    	LEFT JOIN userinfo_auth auth
    	ON user.id=auth.id
    	WHERE user.id=#{id}
    	AND user.status=1
	</select>


     <!-- 아이디 중복검사 -->
     <select id="idCheck" resultType="int">
        SELECT count(*) FROM userinfo 
        WHERE id=#{id}
     </select>
     
     <!-- 이메일 중복검사 -->
     <select id="emailCheck" resultType="int">
        SELECT count(*) FROM userinfo 
        WHERE email=#{email}
     </select>
   
  	 <!-- 로그인 시간 변경 -->
  	 <update id="updateLogdate" parameterType="com.project.dto.Userinfo"> 
        UPDATE userinfo
        SET logdate= Now()
        WHERE id=#{id}
     </update>
   
     <!-- 마이 페이지 -->
     <select id="selectUserinfoById" resultType="com.project.dto.Userinfo">
        SELECT 
        	nickname
        	, email
        FROM userinfo
        WHERE id=#{id}
     </select>

     <!-- 이메일로 사용자 ID 찾기 -->
	 <select id="findUserinfo" parameterType="string" resultType="com.project.dto.Userinfo">
		SELECT * 
		FROM userinfo 
		WHERE name = #{name}
		AND email=#{email}
	 </select>   
	
	 <!-- 닉네임 수정 -->
	 <update id="updateNickname" parameterType="com.project.dto.Userinfo">
		UPDATE userinfo SET
			nickname=#{nickname} 
        WHERE id=#{id}
	 </update>   
</mapper>