<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
   

	<http auto-config="true" use-expressions="true">
	  <form-login login-page="/error"/>
		<intercept-url pattern="/user/login" access="permitAll"/>
		<intercept-url pattern="/user/join" access="permitAll" />
		<intercept-url pattern="/notice/write" access="hasRole('ROLE_MASTER')" />
		<!-- <intercept-url pattern="/post/write" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SOCIAL')" /> -->
		<intercept-url pattern="/**" access="permitAll" /> 
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		
		<access-denied-handler ref="customAccessDeniedHandler"/>
		
		<logout logout-url="/logout" logout-success-url="/" invalidate-session="true" delete-cookies="JSESSIONID"/>
		
		<remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
		
		<!-- authentication-success-handler-ref 속성: AuthenticationSuccessHandler 인터페이스를 상속받은 클래스에 대한 Spring Bean의 식별자(beanName)를 속성값으로 설정 -->
        
		<!-- session-management: 로그인 정보가 저장된 세션을 관리하기 위한 엘리먼트 -->
		<session-management>
		   <concurrency-control max-sessions="1" expired-url="/sessionError"/>
		</session-management>
	</http>
   
	<!-- user-service-ref 속성: 인증에 필요한 사용자 및 권한 정보(UserDetails 객체)기 저장된 객체를 반환하는 
   		클래스(CustomUserDetailsService)에 대한 Spring Bean의 식별자(beanName)를 속성값으로 설정 -->
	<authentication-manager>
		<authentication-provider user-service-ref="customUserDetailsService">
	  		<password-encoder ref="bcryptPasswordEncoder"/>         
		</authentication-provider>
	</authentication-manager>

	<context:component-scan base-package="com.project.dao" />
	<context:component-scan base-package="com.project.security" />
	<context:component-scan base-package="com.project.repository" />
   
	<!-- Spring Security 관련 클래스를 Spring Bean으로 등록 -->
	<beans:bean class="com.project.security.CustomAccessDeniedHandler" id="customAccessDeniedHandler" />
	<beans:bean class="com.project.security.CustomLoginSuccessHandler" id="customLoginSuccessHandler" />
	<beans:bean class="com.project.security.CustomLoginFailureHandler" id="customLoginFailureHandler" />
   
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>
</beans:beans>